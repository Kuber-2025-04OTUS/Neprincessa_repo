# Default values for hw-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

appname: nginx

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: homework-nginx-app

serviceAccountName:
  # Specifies whether a service account should be created
  create: true
  namespace: ""
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: monitoring-sa

podAnnotations: {}
labels: {
  app: nginx
}

initContainers:
  - name: init-myservice
    image: busybox:1.28
    command: ['sh', '-c', "echo '<!DOCTYPE html><html><head><title>Kubernetes intro</title></head><body><p>Hello!</p></body></html>' > /init/index.html"]
    volumeMounts:
      - name:  hometask-pv-storage
        mountPath: /init

# podSecurityContext: {}
  # fsGroup: 2000

# securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 80
  name: nginx-service

ingress:
  enabled: true
  host: homework.otus
  path: /
  pathType: Prefix
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  backend:
    serviceName: nginx-service
    servicePort: 80

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

lifecycle:
  preStop:
    exec:
      command: ["/bin/sh","-c","rm /homework/index.html"]

# livenessProbe: 
  # httpGet:
  #   path: /
  #   port: http
readinessProbe:
  # httpGet:
  #   path: /
  #   port: http
  exec:
      command:
      - sh
      - -c
      - ls /homework/index.html  

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: hometask-pv-storage
    persistentVolumeClaim:
      claimName: homework-pv-claim-custom
    
  - name: nginx-conf
    configMap:
      name: nginx-config
      items:
        - key: nginx.conf
          path: nginx.conf

configMap:
  config: |
     events {}
     http {
        server {
                listen 80;
                server_name localhost;

                location / {
                        root /homework;
                        index index.html index.htm;
                }
        }
       }

persistantVolume:
  name: homework-volume
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 3Gi
  hostPath:
    path: /mnt/data

# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - name:  hometask-pv-storage
    mountPath: /homework
  - name: nginx-conf
    mountPath: /etc/nginx
    readOnly: true
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {
  homework: "true"
}

tolerations: []

affinity: {}

strategy:
  type: RollingUpdate
  maxUnavailable: 1

storageClass:
  name: custom-storage-class
  reclaimPolicy: Retain
  volumeBindingMode: Immediate

persistentVolumeClaim:
  name: homework-pv-claim-custom
  accessModes: ReadWriteOnce
  resources:
    requests:
      storage: 1Gi